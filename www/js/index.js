// V√©rifier si l'√©v√©nement "deviceready" est bien √©cout√©
document.addEventListener(
  "deviceready",
  function () {
    console.log("‚úÖ L'√©v√©nement 'deviceready' a bien √©t√© d√©clench√© !");
  },
  false
);

document.addEventListener("deviceready", onDeviceReady, false);

function onDeviceReady() {
  console.log("‚úÖ onDeviceReady est ex√©cut√© !");

  if ("serviceWorker" in navigator) {
    console.log("üîç Tentative d'enregistrement du Service Worker...");

    navigator.serviceWorker
      .register("/android/www/service-worker.js", { scope: "/android/www/" }) // Scope limit√© √† /android/www/
      .then((reg) => {
        console.log("‚úÖ Service Worker enregistr√© avec succ√®s :", reg.scope);
        if (reg.waiting) {
          reg.waiting.postMessage({ type: "SKIP_WAITING" });
        }
      })
      .catch((err) =>
        console.error("‚ùå √âchec de l‚Äôenregistrement du Service Worker :", err)
      );
  } else {
    console.warn("‚ö†Ô∏è Le navigateur ne supporte pas les Service Workers.");
  }
}

// S√©curit√© : Si "deviceready" ne se d√©clenche pas sous localhost, tenter un fallback
if (location.hostname === "localhost") {
  console.log("‚ö†Ô∏è Mode localhost d√©tect√©, tentative de fallback...");
  onDeviceReady();
}
